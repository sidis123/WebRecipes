// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebRecipesBE.Data;

#nullable disable

namespace WebRecipesBE.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20241012183444_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("WebRecipesBE.Models.Category", b =>
                {
                    b.Property<int>("id_Kategorija")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id_Kategorija"));

                    b.Property<string>("pavadinimas")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("id_Kategorija");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("WebRecipesBE.Models.Comment", b =>
                {
                    b.Property<int>("id_Komentaras")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id_Komentaras"));

                    b.Property<int>("Recipeid_Receptas")
                        .HasColumnType("int");

                    b.Property<int>("Userid_Vartotojas")
                        .HasColumnType("int");

                    b.Property<int>("patiktukai")
                        .HasColumnType("int");

                    b.Property<DateTime>("sukurimo_data")
                        .HasColumnType("datetime2");

                    b.Property<string>("tekstas")
                        .IsRequired()
                        .HasColumnType("nvarchar(254)");

                    b.HasKey("id_Komentaras");

                    b.HasIndex("Recipeid_Receptas");

                    b.HasIndex("Userid_Vartotojas");

                    b.ToTable("Comments");
                });

            modelBuilder.Entity("WebRecipesBE.Models.Recipe", b =>
                {
                    b.Property<int>("id_Receptas")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id_Receptas"));

                    b.Property<int>("Userid_Vartotojas")
                        .HasColumnType("int");

                    b.Property<string>("instrukcija")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("pavadinimas")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("tekstas")
                        .IsRequired()
                        .HasColumnType("nvarchar(254)");

                    b.HasKey("id_Receptas");

                    b.HasIndex("Userid_Vartotojas");

                    b.ToTable("Recipes");
                });

            modelBuilder.Entity("WebRecipesBE.Models.RecipeCategory", b =>
                {
                    b.Property<int>("RecipeId")
                        .HasColumnType("int");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.HasKey("RecipeId", "CategoryId");

                    b.HasIndex("CategoryId");

                    b.ToTable("RecipeCategories");
                });

            modelBuilder.Entity("WebRecipesBE.Models.User", b =>
                {
                    b.Property<int>("id_Vartotojas")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id_Vartotojas"));

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("pavarde")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("role")
                        .HasColumnType("int");

                    b.Property<string>("telefonas")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("vardas")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("id_Vartotojas");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("WebRecipesBE.Models.Comment", b =>
                {
                    b.HasOne("WebRecipesBE.Models.Recipe", "Recipe")
                        .WithMany("Comments")
                        .HasForeignKey("Recipeid_Receptas")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebRecipesBE.Models.User", "User")
                        .WithMany("Comments")
                        .HasForeignKey("Userid_Vartotojas")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Recipe");

                    b.Navigation("User");
                });

            modelBuilder.Entity("WebRecipesBE.Models.Recipe", b =>
                {
                    b.HasOne("WebRecipesBE.Models.User", "User")
                        .WithMany("Recipes")
                        .HasForeignKey("Userid_Vartotojas")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("WebRecipesBE.Models.RecipeCategory", b =>
                {
                    b.HasOne("WebRecipesBE.Models.Category", "Category")
                        .WithMany("ReceptuKategorijos")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebRecipesBE.Models.Recipe", "Recipe")
                        .WithMany("ReceptuKategorijos")
                        .HasForeignKey("RecipeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Recipe");
                });

            modelBuilder.Entity("WebRecipesBE.Models.Category", b =>
                {
                    b.Navigation("ReceptuKategorijos");
                });

            modelBuilder.Entity("WebRecipesBE.Models.Recipe", b =>
                {
                    b.Navigation("Comments");

                    b.Navigation("ReceptuKategorijos");
                });

            modelBuilder.Entity("WebRecipesBE.Models.User", b =>
                {
                    b.Navigation("Comments");

                    b.Navigation("Recipes");
                });
#pragma warning restore 612, 618
        }
    }
}
