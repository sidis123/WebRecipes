{"ast":null,"code":"import React,{useRef,useState}from'react';import{CCard,CCardHeader,CCardBody,CButton,CRow,CCol,CToast,CToastBody,CToastClose,CToastHeader,CToaster}from'@coreui/react';import{DocsExample}from'src/components';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const ExampleToast=()=>{const[toast,addToast]=useState(0);const toaster=useRef();const exampleToast=/*#__PURE__*/_jsxs(CToast,{title:\"CoreUI for React.js\",children:[/*#__PURE__*/_jsxs(CToastHeader,{closeButton:true,children:[/*#__PURE__*/_jsx(\"svg\",{className:\"rounded me-2\",width:\"20\",height:\"20\",xmlns:\"http://www.w3.org/2000/svg\",preserveAspectRatio:\"xMidYMid slice\",focusable:\"false\",role:\"img\",children:/*#__PURE__*/_jsx(\"rect\",{width:\"100%\",height:\"100%\",fill:\"#007aff\"})}),/*#__PURE__*/_jsx(\"strong\",{className:\"me-auto\",children:\"CoreUI for React.js\"}),/*#__PURE__*/_jsx(\"small\",{children:\"7 min ago\"})]}),/*#__PURE__*/_jsx(CToastBody,{children:\"Hello, world! This is a toast message.\"})]});return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(CButton,{color:\"primary\",onClick:()=>addToast(exampleToast),children:\"Send a toast\"}),/*#__PURE__*/_jsx(CToaster,{ref:toaster,push:toast,placement:\"top-end\"})]});};const Toasts=()=>{return/*#__PURE__*/_jsxs(CRow,{children:[/*#__PURE__*/_jsx(CCol,{xs:12,children:/*#__PURE__*/_jsxs(CCard,{className:\"mb-4\",children:[/*#__PURE__*/_jsxs(CCardHeader,{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"React Toast\"}),\" \",/*#__PURE__*/_jsx(\"small\",{children:\"Basic\"})]}),/*#__PURE__*/_jsxs(CCardBody,{children:[/*#__PURE__*/_jsx(\"p\",{className:\"text-body-secondary small\",children:\"Toasts are as flexible as you need and have very little required markup. At a minimum, we require a single element to contain your \\u201Ctoasted\\u201D content and strongly encourage a dismiss button.\"}),/*#__PURE__*/_jsx(DocsExample,{href:\"components/toast\",children:/*#__PURE__*/_jsxs(CToast,{autohide:false,visible:true,children:[/*#__PURE__*/_jsxs(CToastHeader,{closeButton:true,children:[/*#__PURE__*/_jsx(\"svg\",{className:\"rounded me-2\",width:\"20\",height:\"20\",xmlns:\"http://www.w3.org/2000/svg\",preserveAspectRatio:\"xMidYMid slice\",focusable:\"false\",role:\"img\",children:/*#__PURE__*/_jsx(\"rect\",{width:\"100%\",height:\"100%\",fill:\"#007aff\"})}),/*#__PURE__*/_jsx(\"strong\",{className:\"me-auto\",children:\"CoreUI for React.js\"}),/*#__PURE__*/_jsx(\"small\",{children:\"7 min ago\"})]}),/*#__PURE__*/_jsx(CToastBody,{children:\"Hello, world! This is a toast message.\"})]})}),/*#__PURE__*/_jsx(DocsExample,{href:\"components/toast\",children:ExampleToast()})]})]})}),/*#__PURE__*/_jsx(CCol,{xs:12,children:/*#__PURE__*/_jsxs(CCard,{className:\"mb-4\",children:[/*#__PURE__*/_jsxs(CCardHeader,{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"React Toast\"}),\" \",/*#__PURE__*/_jsx(\"small\",{children:\"Translucent\"})]}),/*#__PURE__*/_jsxs(CCardBody,{children:[/*#__PURE__*/_jsx(\"p\",{className:\"text-body-secondary small\",children:\"Toasts are slightly translucent to blend in with what's below them.\"}),/*#__PURE__*/_jsx(DocsExample,{href:\"components/toast#translucent\",tabContentClassName:\"bg-dark\",children:/*#__PURE__*/_jsxs(CToast,{autohide:false,visible:true,children:[/*#__PURE__*/_jsxs(CToastHeader,{closeButton:true,children:[/*#__PURE__*/_jsx(\"svg\",{className:\"rounded me-2\",width:\"20\",height:\"20\",xmlns:\"http://www.w3.org/2000/svg\",preserveAspectRatio:\"xMidYMid slice\",focusable:\"false\",role:\"img\",children:/*#__PURE__*/_jsx(\"rect\",{width:\"100%\",height:\"100%\",fill:\"#007aff\"})}),/*#__PURE__*/_jsx(\"strong\",{className:\"me-auto\",children:\"CoreUI for React.js\"}),/*#__PURE__*/_jsx(\"small\",{children:\"7 min ago\"})]}),/*#__PURE__*/_jsx(CToastBody,{children:\"Hello, world! This is a toast message.\"})]})})]})]})}),/*#__PURE__*/_jsx(CCol,{xs:12,children:/*#__PURE__*/_jsxs(CCard,{className:\"mb-4\",children:[/*#__PURE__*/_jsxs(CCardHeader,{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"React Toast\"}),\" \",/*#__PURE__*/_jsx(\"small\",{children:\"Stacking\"})]}),/*#__PURE__*/_jsxs(CCardBody,{children:[/*#__PURE__*/_jsx(\"p\",{className:\"text-body-secondary small\",children:\"You can stack toasts by wrapping them in a toast container, which will vertically add some spacing.\"}),/*#__PURE__*/_jsx(DocsExample,{href:\"components/toast#stacking\",children:/*#__PURE__*/_jsxs(CToaster,{className:\"position-static\",children:[/*#__PURE__*/_jsxs(CToast,{autohide:false,visible:true,children:[/*#__PURE__*/_jsxs(CToastHeader,{closeButton:true,children:[/*#__PURE__*/_jsx(\"svg\",{className:\"rounded me-2\",width:\"20\",height:\"20\",xmlns:\"http://www.w3.org/2000/svg\",preserveAspectRatio:\"xMidYMid slice\",focusable:\"false\",role:\"img\",children:/*#__PURE__*/_jsx(\"rect\",{width:\"100%\",height:\"100%\",fill:\"#007aff\"})}),/*#__PURE__*/_jsx(\"strong\",{className:\"me-auto\",children:\"CoreUI for React.js\"}),/*#__PURE__*/_jsx(\"small\",{children:\"7 min ago\"})]}),/*#__PURE__*/_jsx(CToastBody,{children:\"Hello, world! This is a toast message.\"})]}),/*#__PURE__*/_jsxs(CToast,{autohide:false,visible:true,children:[/*#__PURE__*/_jsxs(CToastHeader,{closeButton:true,children:[/*#__PURE__*/_jsx(\"svg\",{className:\"rounded me-2\",width:\"20\",height:\"20\",xmlns:\"http://www.w3.org/2000/svg\",preserveAspectRatio:\"xMidYMid slice\",focusable:\"false\",role:\"img\",children:/*#__PURE__*/_jsx(\"rect\",{width:\"100%\",height:\"100%\",fill:\"#007aff\"})}),/*#__PURE__*/_jsx(\"strong\",{className:\"me-auto\",children:\"CoreUI for React.js\"}),/*#__PURE__*/_jsx(\"small\",{children:\"7 min ago\"})]}),/*#__PURE__*/_jsx(CToastBody,{children:\"Hello, world! This is a toast message.\"})]})]})})]})]})}),/*#__PURE__*/_jsx(CCol,{xs:12,children:/*#__PURE__*/_jsxs(CCard,{className:\"mb-4\",children:[/*#__PURE__*/_jsxs(CCardHeader,{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"React Toast\"}),\" \",/*#__PURE__*/_jsx(\"small\",{children:\"Custom content\"})]}),/*#__PURE__*/_jsxs(CCardBody,{children:[/*#__PURE__*/_jsxs(\"p\",{className:\"text-body-secondary small\",children:[\"Customize your toasts by removing sub-components, tweaking them with\",' ',/*#__PURE__*/_jsx(\"a\",{href:\"https://coreui.io/docs/utilities/api\",children:\"utilities\"}),\", or by adding your own markup. Here we've created a simpler toast by removing the default\",' ',/*#__PURE__*/_jsx(\"code\",{children:\"<CToastHeader>\"}),\", adding a custom hide icon from\",' ',/*#__PURE__*/_jsx(\"a\",{href:\"https://coreui.io/icons/\",children:\"CoreUI Icons\"}),\", and using some\",' ',/*#__PURE__*/_jsx(\"a\",{href:\"https://coreui.io/docs/utilities/flex\",children:\"flexbox utilities\"}),\" to adjust the layout.\"]}),/*#__PURE__*/_jsx(DocsExample,{href:\"components/toast#custom-content\",children:/*#__PURE__*/_jsx(CToast,{autohide:false,className:\"align-items-center\",visible:true,children:/*#__PURE__*/_jsxs(\"div\",{className:\"d-flex\",children:[/*#__PURE__*/_jsx(CToastBody,{children:\"Hello, world! This is a toast message.\"}),/*#__PURE__*/_jsx(CToastClose,{className:\"me-2 m-auto\"})]})})}),/*#__PURE__*/_jsx(\"p\",{className:\"text-body-secondary small\",children:\"Alternatively, you can also add additional controls and components to toasts.\"}),/*#__PURE__*/_jsx(DocsExample,{href:\"components/toast#custom-content\",children:/*#__PURE__*/_jsx(CToast,{autohide:false,visible:true,children:/*#__PURE__*/_jsxs(CToastBody,{children:[\"Hello, world! This is a toast message.\",/*#__PURE__*/_jsxs(\"div\",{className:\"mt-2 pt-2 border-top\",children:[/*#__PURE__*/_jsx(CButton,{type:\"button\",color:\"primary\",size:\"sm\",children:\"Take action\"}),/*#__PURE__*/_jsx(CToastClose,{as:CButton,color:\"secondary\",size:\"sm\",className:\"ms-1\",children:\"Close\"})]})]})})})]})]})}),/*#__PURE__*/_jsx(CCol,{xs:12,children:/*#__PURE__*/_jsxs(CCard,{className:\"mb-4\",children:[/*#__PURE__*/_jsxs(CCardHeader,{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"React Toast\"}),\" \",/*#__PURE__*/_jsx(\"small\",{children:\"Custom content\"})]}),/*#__PURE__*/_jsxs(CCardBody,{children:[/*#__PURE__*/_jsxs(\"p\",{className:\"text-body-secondary small\",children:[\"Building on the above example, you can create different toast color schemes with our\",' ',/*#__PURE__*/_jsx(\"a\",{href:\"https://coreui.io/docs/utilities/colors\",children:\"color\"}),\" and\",' ',/*#__PURE__*/_jsx(\"a\",{href:\"https://coreui.io/docs/utilities/background\",children:\"background\"}),\" utilities. Here we've set \",/*#__PURE__*/_jsx(\"code\",{children:\"color=\\\"primary\\\"\"}),\" and added \",/*#__PURE__*/_jsx(\"code\",{children:\".text-white\"}),' ',\"class to the \",/*#__PURE__*/_jsx(\"code\",{children:\"<Ctoast>\"}),\", and then set \",/*#__PURE__*/_jsx(\"code\",{children:\"white\"}),\" property to our close button. For a crisp edge, we remove the default border with\",' ',/*#__PURE__*/_jsx(\"code\",{children:\".border-0\"}),\".\"]}),/*#__PURE__*/_jsx(DocsExample,{href:\"components/toast#color-schemes\",children:/*#__PURE__*/_jsx(CToast,{autohide:false,color:\"primary\",className:\"text-white align-items-center\",visible:true,children:/*#__PURE__*/_jsxs(\"div\",{className:\"d-flex\",children:[/*#__PURE__*/_jsx(CToastBody,{children:\"Hello, world! This is a toast message.\"}),/*#__PURE__*/_jsx(CToastClose,{className:\"me-2 m-auto\",white:true})]})})})]})]})})]});};export default Toasts;","map":{"version":3,"names":["React","useRef","useState","CCard","CCardHeader","CCardBody","CButton","CRow","CCol","CToast","CToastBody","CToastClose","CToastHeader","CToaster","DocsExample","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","ExampleToast","toast","addToast","toaster","exampleToast","title","children","closeButton","className","width","height","xmlns","preserveAspectRatio","focusable","role","fill","color","onClick","ref","push","placement","Toasts","xs","href","autohide","visible","tabContentClassName","type","size","as","white"],"sources":["C:/Users/tnaru/Desktop/WebReceptai/WebRecipes/WebRecipesFE/src/views/notifications/toasts/Toasts.js"],"sourcesContent":["import React, { useRef, useState } from 'react'\nimport {\n  CCard,\n  CCardHeader,\n  CCardBody,\n  CButton,\n  CRow,\n  CCol,\n  CToast,\n  CToastBody,\n  CToastClose,\n  CToastHeader,\n  CToaster,\n} from '@coreui/react'\nimport { DocsExample } from 'src/components'\n\nconst ExampleToast = () => {\n  const [toast, addToast] = useState(0)\n  const toaster = useRef()\n  const exampleToast = (\n    <CToast title=\"CoreUI for React.js\">\n      <CToastHeader closeButton>\n        <svg\n          className=\"rounded me-2\"\n          width=\"20\"\n          height=\"20\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n          preserveAspectRatio=\"xMidYMid slice\"\n          focusable=\"false\"\n          role=\"img\"\n        >\n          <rect width=\"100%\" height=\"100%\" fill=\"#007aff\"></rect>\n        </svg>\n        <strong className=\"me-auto\">CoreUI for React.js</strong>\n        <small>7 min ago</small>\n      </CToastHeader>\n      <CToastBody>Hello, world! This is a toast message.</CToastBody>\n    </CToast>\n  )\n  return (\n    <>\n      <CButton color=\"primary\" onClick={() => addToast(exampleToast)}>\n        Send a toast\n      </CButton>\n      <CToaster ref={toaster} push={toast} placement=\"top-end\" />\n    </>\n  )\n}\n\nconst Toasts = () => {\n  return (\n    <CRow>\n      <CCol xs={12}>\n        <CCard className=\"mb-4\">\n          <CCardHeader>\n            <strong>React Toast</strong> <small>Basic</small>\n          </CCardHeader>\n          <CCardBody>\n            <p className=\"text-body-secondary small\">\n              Toasts are as flexible as you need and have very little required markup. At a minimum,\n              we require a single element to contain your “toasted” content and strongly encourage a\n              dismiss button.\n            </p>\n            <DocsExample href=\"components/toast\">\n              <CToast autohide={false} visible={true}>\n                <CToastHeader closeButton>\n                  <svg\n                    className=\"rounded me-2\"\n                    width=\"20\"\n                    height=\"20\"\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    preserveAspectRatio=\"xMidYMid slice\"\n                    focusable=\"false\"\n                    role=\"img\"\n                  >\n                    <rect width=\"100%\" height=\"100%\" fill=\"#007aff\"></rect>\n                  </svg>\n                  <strong className=\"me-auto\">CoreUI for React.js</strong>\n                  <small>7 min ago</small>\n                </CToastHeader>\n                <CToastBody>Hello, world! This is a toast message.</CToastBody>\n              </CToast>\n            </DocsExample>\n            <DocsExample href=\"components/toast\">{ExampleToast()}</DocsExample>\n          </CCardBody>\n        </CCard>\n      </CCol>\n      <CCol xs={12}>\n        <CCard className=\"mb-4\">\n          <CCardHeader>\n            <strong>React Toast</strong> <small>Translucent</small>\n          </CCardHeader>\n          <CCardBody>\n            <p className=\"text-body-secondary small\">\n              Toasts are slightly translucent to blend in with what&#39;s below them.\n            </p>\n            <DocsExample href=\"components/toast#translucent\" tabContentClassName=\"bg-dark\">\n              <CToast autohide={false} visible={true}>\n                <CToastHeader closeButton>\n                  <svg\n                    className=\"rounded me-2\"\n                    width=\"20\"\n                    height=\"20\"\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    preserveAspectRatio=\"xMidYMid slice\"\n                    focusable=\"false\"\n                    role=\"img\"\n                  >\n                    <rect width=\"100%\" height=\"100%\" fill=\"#007aff\"></rect>\n                  </svg>\n                  <strong className=\"me-auto\">CoreUI for React.js</strong>\n                  <small>7 min ago</small>\n                </CToastHeader>\n                <CToastBody>Hello, world! This is a toast message.</CToastBody>\n              </CToast>\n            </DocsExample>\n          </CCardBody>\n        </CCard>\n      </CCol>\n      <CCol xs={12}>\n        <CCard className=\"mb-4\">\n          <CCardHeader>\n            <strong>React Toast</strong> <small>Stacking</small>\n          </CCardHeader>\n          <CCardBody>\n            <p className=\"text-body-secondary small\">\n              You can stack toasts by wrapping them in a toast container, which will vertically add\n              some spacing.\n            </p>\n            <DocsExample href=\"components/toast#stacking\">\n              <CToaster className=\"position-static\">\n                <CToast autohide={false} visible={true}>\n                  <CToastHeader closeButton>\n                    <svg\n                      className=\"rounded me-2\"\n                      width=\"20\"\n                      height=\"20\"\n                      xmlns=\"http://www.w3.org/2000/svg\"\n                      preserveAspectRatio=\"xMidYMid slice\"\n                      focusable=\"false\"\n                      role=\"img\"\n                    >\n                      <rect width=\"100%\" height=\"100%\" fill=\"#007aff\"></rect>\n                    </svg>\n                    <strong className=\"me-auto\">CoreUI for React.js</strong>\n                    <small>7 min ago</small>\n                  </CToastHeader>\n                  <CToastBody>Hello, world! This is a toast message.</CToastBody>\n                </CToast>\n                <CToast autohide={false} visible={true}>\n                  <CToastHeader closeButton>\n                    <svg\n                      className=\"rounded me-2\"\n                      width=\"20\"\n                      height=\"20\"\n                      xmlns=\"http://www.w3.org/2000/svg\"\n                      preserveAspectRatio=\"xMidYMid slice\"\n                      focusable=\"false\"\n                      role=\"img\"\n                    >\n                      <rect width=\"100%\" height=\"100%\" fill=\"#007aff\"></rect>\n                    </svg>\n                    <strong className=\"me-auto\">CoreUI for React.js</strong>\n                    <small>7 min ago</small>\n                  </CToastHeader>\n                  <CToastBody>Hello, world! This is a toast message.</CToastBody>\n                </CToast>\n              </CToaster>\n            </DocsExample>\n          </CCardBody>\n        </CCard>\n      </CCol>\n      <CCol xs={12}>\n        <CCard className=\"mb-4\">\n          <CCardHeader>\n            <strong>React Toast</strong> <small>Custom content</small>\n          </CCardHeader>\n          <CCardBody>\n            <p className=\"text-body-secondary small\">\n              Customize your toasts by removing sub-components, tweaking them with{' '}\n              <a href=\"https://coreui.io/docs/utilities/api\">utilities</a>, or by adding your own\n              markup. Here we&#39;ve created a simpler toast by removing the default{' '}\n              <code>&lt;CToastHeader&gt;</code>, adding a custom hide icon from{' '}\n              <a href=\"https://coreui.io/icons/\">CoreUI Icons</a>, and using some{' '}\n              <a href=\"https://coreui.io/docs/utilities/flex\">flexbox utilities</a> to adjust the\n              layout.\n            </p>\n            <DocsExample href=\"components/toast#custom-content\">\n              <CToast autohide={false} className=\"align-items-center\" visible={true}>\n                <div className=\"d-flex\">\n                  <CToastBody>Hello, world! This is a toast message.</CToastBody>\n                  <CToastClose className=\"me-2 m-auto\" />\n                </div>\n              </CToast>\n            </DocsExample>\n            <p className=\"text-body-secondary small\">\n              Alternatively, you can also add additional controls and components to toasts.\n            </p>\n            <DocsExample href=\"components/toast#custom-content\">\n              <CToast autohide={false} visible={true}>\n                <CToastBody>\n                  Hello, world! This is a toast message.\n                  <div className=\"mt-2 pt-2 border-top\">\n                    <CButton type=\"button\" color=\"primary\" size=\"sm\">\n                      Take action\n                    </CButton>\n                    <CToastClose as={CButton} color=\"secondary\" size=\"sm\" className=\"ms-1\">\n                      Close\n                    </CToastClose>\n                  </div>\n                </CToastBody>\n              </CToast>\n            </DocsExample>\n          </CCardBody>\n        </CCard>\n      </CCol>\n      <CCol xs={12}>\n        <CCard className=\"mb-4\">\n          <CCardHeader>\n            <strong>React Toast</strong> <small>Custom content</small>\n          </CCardHeader>\n          <CCardBody>\n            <p className=\"text-body-secondary small\">\n              Building on the above example, you can create different toast color schemes with our{' '}\n              <a href=\"https://coreui.io/docs/utilities/colors\">color</a> and{' '}\n              <a href=\"https://coreui.io/docs/utilities/background\">background</a> utilities. Here\n              we&#39;ve set <code>color=&#34;primary&#34;</code> and added <code>.text-white</code>{' '}\n              class to the <code>&lt;Ctoast&gt;</code>, and then set <code>white</code> property to\n              our close button. For a crisp edge, we remove the default border with{' '}\n              <code>.border-0</code>.\n            </p>\n            <DocsExample href=\"components/toast#color-schemes\">\n              <CToast\n                autohide={false}\n                color=\"primary\"\n                className=\"text-white align-items-center\"\n                visible={true}\n              >\n                <div className=\"d-flex\">\n                  <CToastBody>Hello, world! This is a toast message.</CToastBody>\n                  <CToastClose className=\"me-2 m-auto\" white />\n                </div>\n              </CToast>\n            </DocsExample>\n          </CCardBody>\n        </CCard>\n      </CCol>\n    </CRow>\n  )\n}\n\nexport default Toasts\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}